script.js

$(document).ready(function () {
    $('#studentForm').submit(function (e) {
        e.preventDefault(); // Prevent page reload

        const firstName = $('#firstName').val().trim();
        const lastName = $('#lastName').val().trim();
        const marks = $('#marks').val().trim();

        // Client-side validation
        if (!firstName || !lastName) {
            $('#response').text("First Name and Last Name are required").removeClass().addClass("error");
            return;
        }

        if (isNaN(marks) || marks < 0 || marks > 100) {
            $('#response').text("Marks must be between 0 and 100").removeClass().addClass("error");
            return;
        }

        // Send data to server
        fetch('/add-student', {
            method: 'POST',
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ firstName, lastName, marks })
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                $('#response').text(data.message).removeClass().addClass("success");

                // Clear form
                $('#studentForm')[0].reset();

                // Update student table
                let rows = '';
                data.data.forEach(stud => {
                    rows += `<tr>
                        <td>${stud.firstName}</td>
                        <td>${stud.lastName}</td>
                        <td>${stud.marks}</td>
                    </tr>`;
                });
                $('#studentTable tbody').html(rows);
            } else {
                $('#response').text(data.message).removeClass().addClass("error");
            }
        })
        .catch(err => {
            $('#response').text("Server error").removeClass().addClass("error");
            console.error(err);
        });
    });
});


index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Information App</title>
    <link rel="stylesheet" href="style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <div class="container">
        <h2>Student Information Form</h2>
        <form id="studentForm">
            <label for="firstName">First Name:</label>
            <input type="text" id="firstName" name="firstName" required>

            <label for="lastName">Last Name:</label>
            <input type="text" id="lastName" name="lastName" required>

            <label for="marks">Marks:</label>
            <input type="number" id="marks" name="marks" min="0" max="100" required>

            <button type="submit">Add Student</button>
        </form>

        <div id="response"></div>

        <h3>Student List</h3>
        <table id="studentTable">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Marks</th>
                </tr>
            </thead>
            <tbody>
                <!-- Student rows will appear here -->
            </tbody>
        </table>
    </div>

    <script src="script.js"></script>
</body>
</html>

server.js


// Import Express
const express = require('express');
const bodyParser = require('body-parser');
const app = express();
const PORT = 3000;

// Middleware to serve static files and parse data
app.use(express.static('public'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Temporary storage for students
let students = [];

// Route to handle student data
app.post('/add-student', (req, res) => {
    const { firstName, lastName, marks } = req.body;

    // Validation
    if (!firstName || !lastName || !marks) {
        return res.json({ success: false, message: "All fields are required" });
    }

    if (isNaN(marks) || marks < 0 || marks > 100) {
        return res.json({ success: false, message: "Marks must be between 0 and 100" });
    }

    // Create student object
    const stud = {
        firstName,
        lastName,
        marks: Number(marks)
    };

    // Store in array
    students.push(stud);

    // Respond with updated student list
    res.json({ success: true, message: "Student added successfully", data: students });
});

// Start server
app.listen(PORT, () => {
    console.log(`Server running at http://localhost:${PORT}`);
});



style.css



body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.container {
    background: white;
    padding: 20px 30px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    width: 400px;
}

h2, h3 {
    text-align: center;
    margin-bottom: 15px;
}

form input {
    width: 100%;
    padding: 8px 10px;
    margin: 10px 0;
    border-radius: 5px;
    border: 1px solid #ccc;
}

form button {
    width: 100%;
    padding: 10px;
    background: #007BFF;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

form button:hover {
    background: #0056b3;
}

#response {
    margin-top: 10px;
    text-align: center;
    font-weight: bold;
}

#response.success { color: green; }
#response.error { color: red; }

table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 15px;
}

table, th, td {
    border: 1px solid #ddd;
    text-align: center;
}

th, td {
    padding: 8px;
}


